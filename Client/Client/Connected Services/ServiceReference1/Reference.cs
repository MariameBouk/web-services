//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://WS/", ConfigurationName="ServiceReference1.BanqueService")]
    public interface BanqueService {
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://WS/BanqueService/getCompteRequest", ReplyAction="http://WS/BanqueService/getCompteResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Client.ServiceReference1.getCompteResponse getCompte(Client.ServiceReference1.getCompteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WS/BanqueService/getCompteRequest", ReplyAction="http://WS/BanqueService/getCompteResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.getCompteResponse> getCompteAsync(Client.ServiceReference1.getCompteRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://WS/BanqueService/conversionEuroToDHRequest", ReplyAction="http://WS/BanqueService/conversionEuroToDHResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Client.ServiceReference1.conversionEuroToDHResponse conversionEuroToDH(Client.ServiceReference1.conversionEuroToDHRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WS/BanqueService/conversionEuroToDHRequest", ReplyAction="http://WS/BanqueService/conversionEuroToDHResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.conversionEuroToDHResponse> conversionEuroToDHAsync(Client.ServiceReference1.conversionEuroToDHRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://WS/BanqueService/listComptesRequest", ReplyAction="http://WS/BanqueService/listComptesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Client.ServiceReference1.listComptesResponse listComptes(Client.ServiceReference1.listComptesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WS/BanqueService/listComptesRequest", ReplyAction="http://WS/BanqueService/listComptesResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.listComptesResponse> listComptesAsync(Client.ServiceReference1.listComptesRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://WS/")]
    public partial class compte : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long codeField;
        
        private bool codeFieldSpecified;
        
        private double soldeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public long code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool codeSpecified {
            get {
                return this.codeFieldSpecified;
            }
            set {
                this.codeFieldSpecified = value;
                this.RaisePropertyChanged("codeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public double solde {
            get {
                return this.soldeField;
            }
            set {
                this.soldeField = value;
                this.RaisePropertyChanged("solde");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCompte", WrapperNamespace="http://WS/", IsWrapped=true)]
    public partial class getCompteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://WS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long code;
        
        public getCompteRequest() {
        }
        
        public getCompteRequest(long code) {
            this.code = code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCompteResponse", WrapperNamespace="http://WS/", IsWrapped=true)]
    public partial class getCompteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://WS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Client.ServiceReference1.compte @return;
        
        public getCompteResponse() {
        }
        
        public getCompteResponse(Client.ServiceReference1.compte @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="conversionEuroToDH", WrapperNamespace="http://WS/", IsWrapped=true)]
    public partial class conversionEuroToDHRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://WS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double montant;
        
        public conversionEuroToDHRequest() {
        }
        
        public conversionEuroToDHRequest(double montant) {
            this.montant = montant;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="conversionEuroToDHResponse", WrapperNamespace="http://WS/", IsWrapped=true)]
    public partial class conversionEuroToDHResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://WS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double @return;
        
        public conversionEuroToDHResponse() {
        }
        
        public conversionEuroToDHResponse(double @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listComptes", WrapperNamespace="http://WS/", IsWrapped=true)]
    public partial class listComptesRequest {
        
        public listComptesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="listComptesResponse", WrapperNamespace="http://WS/", IsWrapped=true)]
    public partial class listComptesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://WS/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Client.ServiceReference1.compte[] @return;
        
        public listComptesResponse() {
        }
        
        public listComptesResponse(Client.ServiceReference1.compte[] @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BanqueServiceChannel : Client.ServiceReference1.BanqueService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BanqueServiceClient : System.ServiceModel.ClientBase<Client.ServiceReference1.BanqueService>, Client.ServiceReference1.BanqueService {
        
        public BanqueServiceClient() {
        }
        
        public BanqueServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BanqueServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BanqueServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BanqueServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client.ServiceReference1.getCompteResponse Client.ServiceReference1.BanqueService.getCompte(Client.ServiceReference1.getCompteRequest request) {
            return base.Channel.getCompte(request);
        }
        
        public Client.ServiceReference1.compte getCompte(long code) {
            Client.ServiceReference1.getCompteRequest inValue = new Client.ServiceReference1.getCompteRequest();
            inValue.code = code;
            Client.ServiceReference1.getCompteResponse retVal = ((Client.ServiceReference1.BanqueService)(this)).getCompte(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Client.ServiceReference1.getCompteResponse> Client.ServiceReference1.BanqueService.getCompteAsync(Client.ServiceReference1.getCompteRequest request) {
            return base.Channel.getCompteAsync(request);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.getCompteResponse> getCompteAsync(long code) {
            Client.ServiceReference1.getCompteRequest inValue = new Client.ServiceReference1.getCompteRequest();
            inValue.code = code;
            return ((Client.ServiceReference1.BanqueService)(this)).getCompteAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client.ServiceReference1.conversionEuroToDHResponse Client.ServiceReference1.BanqueService.conversionEuroToDH(Client.ServiceReference1.conversionEuroToDHRequest request) {
            return base.Channel.conversionEuroToDH(request);
        }
        
        public double conversionEuroToDH(double montant) {
            Client.ServiceReference1.conversionEuroToDHRequest inValue = new Client.ServiceReference1.conversionEuroToDHRequest();
            inValue.montant = montant;
            Client.ServiceReference1.conversionEuroToDHResponse retVal = ((Client.ServiceReference1.BanqueService)(this)).conversionEuroToDH(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Client.ServiceReference1.conversionEuroToDHResponse> Client.ServiceReference1.BanqueService.conversionEuroToDHAsync(Client.ServiceReference1.conversionEuroToDHRequest request) {
            return base.Channel.conversionEuroToDHAsync(request);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.conversionEuroToDHResponse> conversionEuroToDHAsync(double montant) {
            Client.ServiceReference1.conversionEuroToDHRequest inValue = new Client.ServiceReference1.conversionEuroToDHRequest();
            inValue.montant = montant;
            return ((Client.ServiceReference1.BanqueService)(this)).conversionEuroToDHAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client.ServiceReference1.listComptesResponse Client.ServiceReference1.BanqueService.listComptes(Client.ServiceReference1.listComptesRequest request) {
            return base.Channel.listComptes(request);
        }
        
        public Client.ServiceReference1.compte[] listComptes() {
            Client.ServiceReference1.listComptesRequest inValue = new Client.ServiceReference1.listComptesRequest();
            Client.ServiceReference1.listComptesResponse retVal = ((Client.ServiceReference1.BanqueService)(this)).listComptes(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Client.ServiceReference1.listComptesResponse> Client.ServiceReference1.BanqueService.listComptesAsync(Client.ServiceReference1.listComptesRequest request) {
            return base.Channel.listComptesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.listComptesResponse> listComptesAsync() {
            Client.ServiceReference1.listComptesRequest inValue = new Client.ServiceReference1.listComptesRequest();
            return ((Client.ServiceReference1.BanqueService)(this)).listComptesAsync(inValue);
        }
    }
}
